{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactsList/ContactsList.jsx","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","reset","this","form","label","input","type","onChange","pattern","title","required","button","Component","Filter","Contact","propType","PropTypes","string","isRequired","ContactsList","contacts","onDeleteContact","map","item","onClick","App","filter","formSubmitHandler","data","some","element","toLowerCase","alert","changeFilter","getVisibleContact","contactFilter","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","initialContacts","prevProps","setItem","stringify","visibleContacts","contactsTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d78e7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3c2uU\",\"label\":\"ContactForm_label__2WvbH\",\"input\":\"ContactForm_input__2nkT-\",\"button\":\"ContactForm_button__1buib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2CGQ3\",\"input\":\"Filter_input__dJK7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__3KZ2r\",\"number\":\"Contact_number__1qPKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1YtAs\",\"button\":\"ContactsList_button__3qBwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3V479\",\"contactsTitle\":\"App_contactsTitle__kChUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__24Rmf\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.props.onSubmit(contact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleInputChange } = this;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            value={name}\n            onChange={handleInputChange}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            value={number}\n            onChange={handleInputChange}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\nimport initialContacts from '../../contacts.json';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const comparableElement = this.state.contacts.some(\n      element => element.name.toLowerCase() === data.name.toLowerCase(),\n    );\n    if (comparableElement) {\n      return alert('contact is already in the directory');\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const contactFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(contactFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    this.setState({ contacts: initialContacts });\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { formSubmitHandler, changeFilter, deleteContact } = this;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <Filter value={filter} onChange={changeFilter} />\n        <h2 className={s.contactsTitle}>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}